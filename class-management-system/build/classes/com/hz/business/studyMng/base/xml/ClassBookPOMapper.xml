<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hz.business.studyMng.base.dao.ClassBookPOMapper" >
  <resultMap id="BaseResultMap" type="com.hz.business.studyMng.base.pojo.ClassBookPO" >
    <id column="class_book_key" property="classBookKey" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="count_num" property="countNum" jdbcType="INTEGER" />
    <result column="only_money" property="onlyMoney" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    class_book_key, book_name, version, count_num, only_money
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jwxt_class_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from jwxt_class_book
    where class_book_key = #{classBookKey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from jwxt_class_book
    where class_book_key = #{classBookKey,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPOExample" >
    delete from jwxt_class_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPO" >
    insert into jwxt_class_book (class_book_key, book_name, version, 
      count_num, only_money)
    values (#{classBookKey,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{countNum,jdbcType=INTEGER}, #{onlyMoney,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPO" >
    insert into jwxt_class_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classBookKey != null" >
        class_book_key,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="countNum != null" >
        count_num,
      </if>
      <if test="onlyMoney != null" >
        only_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classBookKey != null" >
        #{classBookKey,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="countNum != null" >
        #{countNum,jdbcType=INTEGER},
      </if>
      <if test="onlyMoney != null" >
        #{onlyMoney,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPOExample" resultType="java.lang.Integer" >
    select count(*) from jwxt_class_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jwxt_class_book
    <set >
      <if test="record.classBookKey != null" >
        class_book_key = #{record.classBookKey,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.countNum != null" >
        count_num = #{record.countNum,jdbcType=INTEGER},
      </if>
      <if test="record.onlyMoney != null" >
        only_money = #{record.onlyMoney,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jwxt_class_book
    set class_book_key = #{record.classBookKey,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      count_num = #{record.countNum,jdbcType=INTEGER},
      only_money = #{record.onlyMoney,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPO" >
    update jwxt_class_book
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="countNum != null" >
        count_num = #{countNum,jdbcType=INTEGER},
      </if>
      <if test="onlyMoney != null" >
        only_money = #{onlyMoney,jdbcType=INTEGER},
      </if>
    </set>
    where class_book_key = #{classBookKey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.business.studyMng.base.pojo.ClassBookPO" >
    update jwxt_class_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      count_num = #{countNum,jdbcType=INTEGER},
      only_money = #{onlyMoney,jdbcType=INTEGER}
    where class_book_key = #{classBookKey,jdbcType=VARCHAR}
  </update>
</mapper>