<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.springboot.business.classAppraisal.base.dao.ClassCourseMapper">
  <resultMap id="BaseResultMap" type="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
<!--     <result column="year_name" jdbcType="VARCHAR" property="yearName" /> -->
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, class_id, course_id, delete_flag, create_time, creator
  </sql>
  <select id="selectByExample" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jwxt_conn_class_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jwxt_conn_class_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jwxt_conn_class_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourseExample">
    delete from jwxt_conn_class_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourse">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jwxt_conn_class_course (class_id, course_id, delete_flag, 
      create_time, creator)
    values (#{classId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourse">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jwxt_conn_class_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classId != null">
        class_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourseExample" resultType="java.lang.Integer">
    select count(*) from jwxt_conn_class_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jwxt_conn_class_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jwxt_conn_class_course
    set id = #{record.id,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourse">
    update jwxt_conn_class_course
    <set>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.ClassCourse">
    update jwxt_conn_class_course
    set class_id = #{classId,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  	<select id="listStudentCourse" parameterType="map" resultMap="BaseResultMap">
    select 
    ccc.id, ccc.class_id, ccc.course_id, ccc.delete_flag, ccc.create_time, ccc.creator
	, c.name as course_name  ,dc.class_name as class_name
    from jwxt_conn_class_course ccc
    left join jwxt_dmk_class dc on ccc.class_id = dc.class_key
    left join jwxt_course c on ccc.course_id = c.id
    <!-- left join jwxt_dmk_year_term yt  on scs.year_id = yt.year_term_key -->
    where ccc.delete_flag = 0
    <if test="classId!=null and classId  != '' ">
				and ccc.class_id=#{classId}
	</if>
	<if test="  yearId  !=null and yearId  != '' ">
				and ccc.year_id=#{yearId}
	</if>
	<if test="  courseId  !=null and courseId  != '' ">
				and ccc.course_id=#{courseId}
	</if>
	order by ccc.create_time desc
  </select>
  
  
</mapper>