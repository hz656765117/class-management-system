<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hz.springboot.business.classAppraisal.base.dao.StuScoreMapper">
  <resultMap id="BaseResultMap" type="com.hz.springboot.business.classAppraisal.base.pojo.StuScore">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="academic_score" jdbcType="DOUBLE" property="academicScore" />
    <result column="not_academic_score" jdbcType="DOUBLE" property="notAcademicScore" />
    <result column="sports_score" jdbcType="DOUBLE" property="sportsScore" />
    <result column="academic_score_seq" jdbcType="INTEGER" property="academicScoreSeq" />
    <result column="person_id" jdbcType="VARCHAR" property="personId" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="year_id" jdbcType="VARCHAR" property="yearId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="total_score" jdbcType="DOUBLE" property="totalScore" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="year_name" jdbcType="VARCHAR" property="yearName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, academic_score, not_academic_score, sports_score, academic_score_seq, person_id, 
    class_id, year_id, create_time, total_score
  </sql>
  <select id="selectByExample" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jwxt_stu_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jwxt_stu_score
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jwxt_stu_score
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScoreExample">
    delete from jwxt_stu_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jwxt_stu_score (academic_score, not_academic_score, sports_score, 
      academic_score_seq, person_id, class_id, 
      year_id, create_time, total_score
      )
    values (#{academicScore,jdbcType=DOUBLE}, #{notAcademicScore,jdbcType=DOUBLE}, #{sportsScore,jdbcType=DOUBLE}, 
      #{academicScoreSeq,jdbcType=INTEGER}, #{personId,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, 
      #{yearId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{totalScore,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScore">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into jwxt_stu_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="academicScore != null">
        academic_score,
      </if>
      <if test="notAcademicScore != null">
        not_academic_score,
      </if>
      <if test="sportsScore != null">
        sports_score,
      </if>
      <if test="academicScoreSeq != null">
        academic_score_seq,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="yearId != null">
        year_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="academicScore != null">
        #{academicScore,jdbcType=DOUBLE},
      </if>
      <if test="notAcademicScore != null">
        #{notAcademicScore,jdbcType=DOUBLE},
      </if>
      <if test="sportsScore != null">
        #{sportsScore,jdbcType=DOUBLE},
      </if>
      <if test="academicScoreSeq != null">
        #{academicScoreSeq,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="yearId != null">
        #{yearId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScoreExample" resultType="java.lang.Integer">
    select count(*) from jwxt_stu_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jwxt_stu_score
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.academicScore != null">
        academic_score = #{record.academicScore,jdbcType=DOUBLE},
      </if>
      <if test="record.notAcademicScore != null">
        not_academic_score = #{record.notAcademicScore,jdbcType=DOUBLE},
      </if>
      <if test="record.sportsScore != null">
        sports_score = #{record.sportsScore,jdbcType=DOUBLE},
      </if>
      <if test="record.academicScoreSeq != null">
        academic_score_seq = #{record.academicScoreSeq,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.yearId != null">
        year_id = #{record.yearId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalScore != null">
        total_score = #{record.totalScore,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jwxt_stu_score
    set id = #{record.id,jdbcType=INTEGER},
      academic_score = #{record.academicScore,jdbcType=DOUBLE},
      not_academic_score = #{record.notAcademicScore,jdbcType=DOUBLE},
      sports_score = #{record.sportsScore,jdbcType=DOUBLE},
      academic_score_seq = #{record.academicScoreSeq,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      year_id = #{record.yearId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      total_score = #{record.totalScore,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScore">
    update jwxt_stu_score
    <set>
      <if test="academicScore != null">
        academic_score = #{academicScore,jdbcType=DOUBLE},
      </if>
      <if test="notAcademicScore != null">
        not_academic_score = #{notAcademicScore,jdbcType=DOUBLE},
      </if>
      <if test="sportsScore != null">
        sports_score = #{sportsScore,jdbcType=DOUBLE},
      </if>
      <if test="academicScoreSeq != null">
        academic_score_seq = #{academicScoreSeq,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="yearId != null">
        year_id = #{yearId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hz.springboot.business.classAppraisal.base.pojo.StuScore">
    update jwxt_stu_score
    set academic_score = #{academicScore,jdbcType=DOUBLE},
      not_academic_score = #{notAcademicScore,jdbcType=DOUBLE},
      sports_score = #{sportsScore,jdbcType=DOUBLE},
      academic_score_seq = #{academicScoreSeq,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      year_id = #{yearId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      total_score = #{totalScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  	<select id="listStuScore" parameterType="map" resultMap="BaseResultMap">
    select 
    ss.id, ss.academic_score, ss.not_academic_score, ss.sports_score, ss.academic_score_seq, ss.person_id, 
    ss.class_id, ss.year_id, ss.create_time, ss.total_score
    ,stu.name as student_name ,dc.class_name as class_name
	 ,yt.year_term_name as year_name
    from jwxt_stu_score ss
    left join jwxt_student stu on ss.person_id = stu.student_key 
    left join jwxt_dmk_class dc on ss.class_id = dc.class_key
    left join jwxt_dmk_year_term yt  on ss.year_id = yt.year_term_key
    where 1 = 1
    <if test="classId!=null and classId  != '' ">
				and ss.class_id=#{classId}
	</if>
	<if test=" studentId !=null and studentId  != '' ">
				and ss.person_id=#{studentId}
	</if>
	<if test="  yearId  !=null and yearId  != '' ">
				and ss.year_id=#{yearId}
	</if>
	<if test="  id  !=null and id  != '' ">
				and ss.id=#{id}
	</if>
	order by total_score desc
  </select>
  
</mapper>